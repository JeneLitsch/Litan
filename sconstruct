flags = [
	"-std=c++2a", "-O3",
	"-Wall",
	"-Wextra",
	"-Wconversion",
	"-Wunreachable-code",
	"-Wuninitialized",
	"-pedantic-errors",
	"-Wold-style-cast",
	"-Wno-error=unused-variable"
]

def glob(dirs):
	files = []
	for dir in dirs:
		files.append(Glob(dir + "/*.cxx"))
	return files

incl = [
	".",
]

env = Environment(
	CXX = "clang++-12",
	# CXX = "g++-10",
	CXXFLAGS = flags,
	CPPPATH = incl,
	CPPDEFINES = [],
	LIBS = [],
	LIBPATH = ".",
	SCONS_CXX_STANDART="c++20",
	CXXCOMSTR = "[Compiling] $TARGET",
	LINKCOMSTR = "[Linking] $TARGET")


ltnc_core = [
	"ltnc_core",
	"ltnc_core/ast",
	"ltnc_core/lex",
	"ltnc_core/parse",
	"ltnc_core/unfold",
	"ltnc_core/optimize",
	"ltnc_core/compile",
	"ltnc_core/compile/utils",
]

ltnc = [
	"ltnc",
	"ltnc/compile",
	"ltnc/compile/build_in",
	"ltnc/compile/utils",
]
ltncCli = [
	"ltnc/cli",
]


ltna = [
	"ltna",
	"ltna/linking",
	"ltna/expand",
	"ltna/assemble",
]
ltnaCli = [
	"ltna/cli",
]

ltnvm = [
	"ltnvm",
	"ltnvm/external",
	"ltnvm/memory",
	"ltnvm/memory/objects",
]
ltnvmCli = [
	"ltnvm/cli",
]

ltnCli = [
	"ltn/cli"
]

env.Program('bin/ltnc', glob(ltnc_core + ltnc + ltncCli))
env.Program('bin/ltna', glob(ltna + ltnaCli))
env.Program('bin/ltnvm', glob(ltnvm + ltnvmCli))
env.Program('bin/ltn', glob(ltnc_core + ltnc + ltna + ltnvm + ltnCli))
