function vec2(x,y) {
	return [
		.x = x,
		.y = y,
		.{_+_}  = lambda (self, other) => vec2(self.x + other.x, self.y + other.y),
		.{_-_}  = lambda (self, other) => vec2(self.x - other.x, self.y - other.y),
		.{_*_}  = lambda (self, other) => vec2(self.x * other.x, self.y * other.y),
		.{_/_}  = lambda (self, other) => vec2(self.x / other.x, self.y / other.y),
		.{_%_}  = lambda (self, other) => vec2(self.x % other.x, self.y % other.y),
		.{_%_}  = lambda (self, other) => vec2(self.x % other.x, self.y % other.y),
		.print = lambda(self) {
			std::print("(");
			std::print(self.x);
			std::print(",");
			std::print(self.y);
			std::print(")");
			std::println("");
		}
	];
}


function main(args) {
	var v1 = vec2(1.0, 2.0);
	var v2 = vec2(10.0, 20.0);
	(v1 + v2)->print();
	(v1 - v2)->print();
	(v1 * v2)->print();
	(v1 / v2)->print();
	(v1 % v2)->print();
}