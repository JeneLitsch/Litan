// function vec2(x,y) {
// 	return [
// 		.x = x,
// 		.y = y,
// 		.{_+_}  = lambda (self, other) => vec2(self.x +  other.x, self.y +  other.y),
// 		.{_-_}  = lambda (self, other) => vec2(self.x -  other.x, self.y -  other.y),
// 		.{_*_}  = lambda (self, other) => vec2(self.x *  other.x, self.y *  other.y),
// 		.{_/_}  = lambda (self, other) => vec2(self.x /  other.x, self.y /  other.y),
// 		.{_%_}  = lambda (self, other) => vec2(self.x %  other.x, self.y %  other.y),
// 		.{_**_} = lambda (self, other) => vec2(self.x ** other.x, self.y ** other.y),
// 		.{str}  = lambda (self) => "(" + std::str(self.x) + "," + std::str(self.y) + ")",
// 	];
// }



function test(x) => [
	.x = x,
	.{cmp} = lambda(self, other) => self.x <=> other.x,
]



function main(args) {
	var a = test(1);
	var b = test(1);
	var c = test(2);
	std::println(a == b);
	std::println(a == c);
	std::println(a < b);
	std::println(a > c);
}