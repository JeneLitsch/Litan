function f() {
	std::println(ranged_sum([]));
	std::println(ranged_sum([1,1,1,1,1,1,1,1,1,1,1]));
	std::println(ranged_sum([]));
	std::println(ranged_sum([]));
	std::println(ranged_sum([]));
	std::println(ranged_sum([]));
	std::println(ranged_sum([]));
	std::println(ranged_sum([]));
	std::println(ranged_sum([]));
	std::println(ranged_sum([1,1,1,1,1,1,1,1,1,1,1,1]));
	std::println(ranged_sum([]));
}


		function ranged_sum(array : array<int>) {
			var sum = 0;
			for(elem : array) sum = sum + elem;
			return sum;
		}

function main(args) {
	// var cap = 420;
	// var f = lambda [] (x : int, y : int) => x - y;
	// std::println(f(1,2));

	// var obj = [
	// 	.f = lambda [cap](self, x) {
	// 		std::println(self.x);
	// 		std::println(x);
	// 		std::println(cap);
	// 	},
	// 	.x = 42,
	// ];

	// obj->f(1337);

	// std::invoke(obj.f, [obj, 1337]);
	// std::println(std::invoke(lambda(a,b) => a + b, [40,2]));

	// var fs = [ &f(), &f(), &f(), &f(), &f(), &f(), &f(), &f(), &f(), &f()];

	// for(f : fs) f();

	// std::println("hello world");

	for(a : std::range(0, 10, 1)) {
		for(b : std::range(0, 10, 1)) {
			std::print(a * b);
		}
		std::println("");
	}
}