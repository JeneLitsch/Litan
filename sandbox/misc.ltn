function vec2(x,y) {
	return [
		.x = x,
		.y = y,
		.{_+_}  = lambda (self, other) => vec2(self.x +  other.x, self.y +  other.y),
		.{_-_}  = lambda (self, other) => vec2(self.x -  other.x, self.y -  other.y),
		.{_*_}  = lambda (self, other) => vec2(self.x *  other.x, self.y *  other.y),
		.{_/_}  = lambda (self, other) => vec2(self.x /  other.x, self.y /  other.y),
		.{_%_}  = lambda (self, other) => vec2(self.x %  other.x, self.y %  other.y),
		.{_**_} = lambda (self, other) => vec2(self.x ** other.x, self.y ** other.y),
		.{str}  = lambda (self) => "(" + std::str(self.x) + "," + std::str(self.y) + ")",
	];
}



function main(args) {
	var v1 = vec2(1.0, 2.0);
	var v2 = vec2(10.0, 20.0);
	std::println(v1 + v2);
	std::println(v1 - v2);
	std::println(v1 * v2);
	std::println(v1 / v2);
	std::println(v1 % v2);
	std::println(v2 ** v1);
}