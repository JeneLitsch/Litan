// function vec2(x,y) {
// 	return [
// 		.x = x,
// 		.y = y,
// 		.{_+_}  = lambda (self, other) => vec2(self.x +  other.x, self.y +  other.y),
// 		.{_-_}  = lambda (self, other) => vec2(self.x -  other.x, self.y -  other.y),
// 		.{_*_}  = lambda (self, other) => vec2(self.x *  other.x, self.y *  other.y),
// 		.{_/_}  = lambda (self, other) => vec2(self.x /  other.x, self.y /  other.y),
// 		.{_%_}  = lambda (self, other) => vec2(self.x %  other.x, self.y %  other.y),
// 		.{_**_} = lambda (self, other) => vec2(self.x ** other.x, self.y ** other.y),
// 		.{str}  = lambda (self) => "(" + std::str(self.x) + "," + std::str(self.y) + ")",
// 	];
// }



function test(x) => [
	.x = x,
	.{bool} = lambda(self) => self.x != 0,
]



function main(args) {
	var obj1 = test(0);
	var obj2 = test(1);

	std::println(!!obj1);
	std::println(!!obj2);
}