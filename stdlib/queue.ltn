namespace ltn {
	typedef Queue;

	function Queue() -> ltn::Queue {
		asm { "heap::allocate::queue" "return" }
	}

	function push(ltn::Queue queue, Raw value) -> Void
		asm { "load 0" "load 1" "queue::push" }


	function pop(ltn::Queue queue) -> Raw
		asm { "load 0" "queue::pop" "return" }


	function front(ltn::Queue queue) -> Raw
		asm { "load 0" "queue::front" "return" }


	function empty(ltn::Queue queue) -> Int 
		asm { "load 0" "queue::empty" "return" }
}