namespace sphinx::test {
	function bitnot_value() {
		assert_equal(~0, -1);
		assert_equal(~1, -2);
		assert_equal(~-1, 0);
	}



	function bitnot_type() {
		assert_equal(reflect(expr ~1).type.name, "int");
		assert_equal(reflect(expr ~true).type.name, "int");
		assert_equal(reflect(expr ~'A').type.name, "int");
	}



	function bitnot_typename() {
		assert_equal(std::typename(~1), "int");
		assert_equal(std::typename(~true), "int");
		assert_equal(std::typename(~'A'), "int");
	}



	function bitnot_except() {
		assert_success(lambda => ~(true:any));
		assert_success(lambda => ~(false:any));
		assert_success(lambda => ~('A':any));
		assert_success(lambda => ~(1:any));
		assert_except(lambda => ~(1.0:any));
		assert_except(lambda => ~("":any));
		assert_except(lambda => ~([]:any));
	}
}