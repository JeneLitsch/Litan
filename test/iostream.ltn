namespace sphinx::test {
	function std_cin_type() {
		var cin1 = std::cin();
		var cin2 : istream = std::cin();
		assert_equal(reflect(expr cin1).type.name, "istream");
		assert_equal(reflect(expr cin2).type.name, "istream");
	}



	function std_cout_type() {
		var cout1 = std::cout();
		var cout2 : ostream = std::cout();
		assert_equal(reflect(expr cout1).type.name, "ostream");
		assert_equal(reflect(expr cout2).type.name, "ostream");
	}



	function std_strin_type() {
		var strin = std::strin("hello world");
		assert_equal(reflect(expr strin).type.name, "istream");
	}



	function std_strout_type() {
		var strout = std::strout();
		assert_equal(reflect(expr strout).type.name, "ostream");
	}



	function std_fin_type() {
		var fin = std::fin("test/files/dummy.txt");
		assert_equal(reflect(expr fin).type.name, "istream");
	}



	function std_fout_type() {
		{
			var fout = std::fout("test/files/dummy.txt");
			assert_equal(reflect(expr fout).type.name, "ostream");
			std::io::close(fout);
		}

		{
			var fout = std::fout("test/files/dummy.txt", std::io::open_mode::APPEND);
			assert_equal(reflect(expr fout).type.name, "ostream");
			std::io::close(fout);
		}

	}
}