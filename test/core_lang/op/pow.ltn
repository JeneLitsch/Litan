namespace op {
	function pow(sphinx) {
		var cases = [
			sphinx::assert_result([2, 2], 4),
			sphinx::assert_result([3, 3], 27),
			sphinx::assert_result([9.0, 0.5], 3),
			sphinx::assert_result([1337, 0], 1),
			sphinx::assert_result([1337, 1], 1337),
			sphinx::assert_result([2, -1], 0.5),
			sphinx::assert_fail(["a", 0]),
			sphinx::assert_fail([[], 0]),
			sphinx::assert_fail([std::queue(), 0]),
			sphinx::assert_result([true, 0], true),
			sphinx::assert_result([true, 1], true),
			sphinx::assert_result([true, 2], true),
			sphinx::assert_result([0, 0], 1),
		];
		
		var fx    = lambda (a, b) => a ** b;
		var fx_eq = lambda (a, b) {
			a **= b;
			return a;
		};

		sphinx::run_test(sphinx, "Operator **", fx, cases);
		sphinx::run_test(sphinx, "Operator **=", fx_eq, cases);
	}
}