namespace op {
    function less_value(sphinx) {
        var cases = [
			sphinx::assert_result([1, 2], true),
			sphinx::assert_result([42, -2.0], false),
			sphinx::assert_result([-42, -2.0], true),
			sphinx::assert_result(['A', 'C'], true),
			sphinx::assert_result(['Z', 'Y'], false),
			sphinx::assert_result(["ABC", "AB"], false),
			sphinx::assert_result(["ABC", "BC"], true),
			sphinx::assert_result(["ABCD", "ZBC"], true),
			sphinx::assert_result(["ZBCD", "AZBC"], false),
			sphinx::assert_result([std::cout(), std::cout()], false),
			sphinx::assert_result([std::cin(), std::cout()], true),
		];

		var fx = lambda (a, b) => a < b;

		sphinx::run_test(sphinx, "Operator <", fx, cases);
    }



	function less_type(sphinx) {
		var cases = [
			type_check(decltype(1 > "0"), "bool"),
		];

		sphinx::run_test(sphinx, "Operator < type", lambda(x) => x, cases);
	}



	function less(sphinx) {
		less_value(sphinx);
		less_type(sphinx);
	}
}