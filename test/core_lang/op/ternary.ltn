namespace op {
    function ternary_value(sphinx) {
        var cases = [
            sphinx::assert_result([true, 1, 2], 1),
            sphinx::assert_result([false, 1, 2], 2),
			sphinx::assert_result([-1, 1, 2], 1),
			sphinx::assert_result([null, 1, 2], 2),
			sphinx::assert_result(["", 1, 2], 1),
			sphinx::assert_result([[], 1, 2], 1),
			sphinx::assert_result([0, 1, 2], 2),
        ];

        var fx = lambda(a, b, c) => a ? b : c;

        sphinx::run_test(sphinx, "Operator a?b:c", fx, cases);
    }


	
	function ternary_type(sphinx) {
		var cases = [
			type_check(decltype(true ? 1 : 1), "int"),
			type_check(decltype(true ? "1" : 1), "any"),
			type_check(decltype(true ? "1" : "str"), "string"),
			type_check(decltype(true ?["1"] : [1]), "array<any>"),
			type_check(decltype(true ?[[]] : [[]]), "array<array<>>"),
			type_check(decltype(true ?[[true]] : [[1]]), "array<array<any>>"),
		];

		sphinx::run_test(sphinx, "Operator a?b:c type", lambda(x) => x, cases);
	}



	function ternary(sphinx) {
		ternary_value(sphinx);
		ternary_type(sphinx);
    }
}