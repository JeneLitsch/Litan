namespace op {
    function nullco_value(sphinx) {
		var cases = [
			sphinx::assert_result([true, 1], true),
			sphinx::assert_result([false, 1], false),
			sphinx::assert_result([null, 42], 42),
			sphinx::assert_result([null, null], null),
			sphinx::assert_result([std::cout(), 42], std::cout()),
			sphinx::assert_result(["Hello", 42], "Hello"),
			sphinx::assert_result([-15.0, 42], -15.0),
			sphinx::assert_result([std::null_v(), 3.5], 3.5),
		];
        var fx = lambda(a, b) => a ?? b;
		sphinx::run_test(sphinx, "Operator ??", fx, cases);   
    }


	function nullco_type(sphinx) {
		var cases = [
			type_check(decltype(1 ?? 1), "int"),
			type_check(decltype("1" ?? 1), "any"),
			type_check(decltype("1" ?? "str"), "string"),
			type_check(decltype(["1"] ?? [1]), "array<any>"),
			type_check(decltype([[]] ?? [[]]), "array<array<>>"),
			type_check(decltype([[true]] ?? [[1]]), "array<array<any>>"),
		];

		sphinx::run_test(sphinx, "Operator ?? type", lambda(x) => x, cases);
	}


	function nullco(sphinx) {
		nullco_value(sphinx);
		nullco_type(sphinx);
	}
}