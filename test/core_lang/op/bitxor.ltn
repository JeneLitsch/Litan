namespace op {
	function bitxor_value(sphinx) {
        var cases = [
			sphinx::assert_result([0b011, 0b110], 0b101),
			sphinx::assert_result([0b001, 0b100], 0b101),
		];
		
		var bitor    = lambda (a, b) => a ^ b;
		var bitor_eq = lambda (a, b) {
			a ^= b;
			return a;
		};

        sphinx::run_test(sphinx, "Operator ^",  bitor,    cases);
        sphinx::run_test(sphinx, "Operator ^=", bitor_eq, cases);
	}



	function bitxor_type(sphinx) {
		var any;
		var cases = [
			type_check(decltype(1 ^ 1), "int"),
			type_check(decltype(any ^ 1), "int"),
			type_check(decltype(0.0 ^ 1), "error"),
		];

        sphinx::run_test(sphinx, "Operator ^ type",  lambda(x) => x, cases);
	}



    function bitxor(sphinx) {
		bitxor_value(sphinx);
		bitxor_type(sphinx);
    }
}