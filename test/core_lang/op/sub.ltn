namespace op {
	function sub_type(sphinx) {
		var cases = [
			type_check(decltype(1 - 2.0), "float"),
			type_check(decltype(1 - 1), "int"),
			type_check(decltype(true - 1), "int"),
			type_check(decltype(true - true), "int"),
			type_check(decltype(1.0 - 1.0), "float"),
			type_check(decltype("A" - "A"), "error"),
			type_check(decltype([] - []), "error"),
		];

		sphinx::run_test(sphinx, "Operator + type", lambda(x) => x, cases);
	}



	function sub_value(sphinx) {
		var cases = [
			sphinx::assert_result([1, 2], -1),
			sphinx::assert_result([1, -2], 3),
			sphinx::assert_result([true, true], 0),
			sphinx::assert_result([true, false], 1),
			sphinx::assert_result([false, true], -1),
			sphinx::assert_result(['C', 2], 'A'),
			
		];
		
		var fx    = lambda(a, b) => a - b;
		var fx_eq = lambda(a, b) {
			a -= b;
			return a;
		};

		sphinx::run_test(sphinx, "Operator -", fx, cases);
		sphinx::run_test(sphinx, "Operator -=", fx_eq, cases);
	}



	function sub(sphinx) {
		sub_value(sphinx);
		sub_type(sphinx);
	}
}