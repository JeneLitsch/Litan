namespace op {
    function not_approx(sphinx) {
        var cases = [
			sphinx::assert_result([-1, 1], true),
			sphinx::assert_result([1, 1], false),
			sphinx::assert_result([1.0000000001, 1], false),
			sphinx::assert_result(['A', 'B'], true),
			sphinx::assert_result(['A', 'A'], false),
			sphinx::assert_result(["A", "B"], true),
			sphinx::assert_result(["C", "B"], true),
			sphinx::assert_result(["A", "A"], false),
			sphinx::assert_result(["ABC", "ABC"], false),
			sphinx::assert_result(["AB", "ABC"], true),
			sphinx::assert_result([[1,2,3], [1,2,3]], false),
			sphinx::assert_result([[1,2], [1,2,3]], true),
			sphinx::assert_result([[1,2,4], [1,2,3]], true),
		];

		var fx = lambda (a, b) => a!~b;

		sphinx::run_test(sphinx, "Operator !~", fx, cases);
    }
}