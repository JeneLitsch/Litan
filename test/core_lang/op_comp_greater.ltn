namespace op {
    function greater_value(sphinx) {
        var cases = [
			sphinx::assert_result([1, 2], false),
			sphinx::assert_result([42, -2.0], true),
			sphinx::assert_result([-42, -2.0], false),
			sphinx::assert_result(['A', 'C'], false),
			sphinx::assert_result(['Z', 'Y'], true),
			sphinx::assert_result(["ABC", "AB"], true),
			sphinx::assert_result(["ABC", "BC"], false),
			sphinx::assert_result(["ABCD", "ZBC"], false),
			sphinx::assert_result(["ZBCD", "AZBC"], true),
			sphinx::assert_result([std::cout(), std::cout()], false),
			sphinx::assert_result([std::cin(), std::cout()], false),
		];

		var fx = lambda(a, b) => a > b;

		sphinx::run_test(sphinx, "Operator >", fx, cases);
    }



    function greater_type(sphinx) {
		var cases = [
			type_check(decltype(1 > "0"), "bool"),
		];

		sphinx::run_test(sphinx, "Operator > type", lambda(x) => x, cases);
	}



    function greater(sphinx) {
		greater_type(sphinx);
		greater_value(sphinx);
	}
}