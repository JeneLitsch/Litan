namespace op {
	function mlt_value(sphinx) {
		var cases = [
			sphinx::assert_result([1, 2], 2),
			sphinx::assert_result([1.5, -2], -3),
			sphinx::assert_result([true, true], 1),
			sphinx::assert_result([true, false], 0),
			sphinx::assert_result([false, true], 0),
			sphinx::assert_result(['C', 2], 'C' + 'C'),
		];
		
		var fx    = lambda(a, b) => a * b;
		sphinx::run_test(sphinx, "Operator *", fx, cases);
	}



	function mlt_type(sphinx) {
		var cases = [
			type_check(decltype(1 * 2.0), "float"),
			type_check(decltype(1 * 1), "int"),
			type_check(decltype(true * 1), "int"),
			type_check(decltype(true * true), "int"),
			type_check(decltype(1.0 * 1.0), "float"),
			type_check(decltype("A" * "A"), "error"),
			type_check(decltype([] * []), "error"),
		];

		sphinx::run_test(sphinx, "Operator * type", lambda(x) => x, cases);
	}



	function mlt(sphinx) {
		mlt_value(sphinx);
		mlt_type(sphinx);
	}
}