namespace test {
	function make_capture_lambda(a) {
		return lambda [a] () {
			return a;
		};
	}

	function make_capture_lambda(a, b) {
		return lambda [a, b] () {
			return a + b;
		};
	}

	function make_capture_lambda() {
		var a = 1;
		var b = 2;
		return lambda [a, b] (c, d) {
			return a - b + c - d;
		};
	}

	function captures() {
		var cases = [
			[[make_capture_lambda(1) , []], 1],
			[[make_capture_lambda(42), []], 42],
			[[make_capture_lambda(21, 21), []], 42],
			[[make_capture_lambda(1000, 337), []], 1337],
			[[make_capture_lambda(), [3, 4]], -2],
			[[make_capture_lambda(), [3, 1]], 1],
		];

		return test_all_cases("Lambda capture", &std::invoke(_,_), cases);
	}
}