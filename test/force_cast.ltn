namespace sphinx::test {
	function force_cast_value() {
		var str : any = "abc";
		assert_equal_strict(4.2 ! int, 4);
		assert_equal_strict(str ! string, "abc");
	}


	namespace force_cast_local {
		function<T> test_type() {
			var x : any;
			assert_equal_strict(
				reflect(expr x ! T).type.name,
				reflect(type T).name
			);
		}
	}


	function force_cast_type() {
		force_cast_local::test_type(<int>);
		force_cast_local::test_type(<string>);
		force_cast_local::test_type(<array<int>>);
	}



	function force_cast_throw() {
		assert_success(lambda => ("":any) ! string);
		assert_except(lambda => (4:any) ! string);
		assert_success(lambda => (4:any) ! float);
	}
}