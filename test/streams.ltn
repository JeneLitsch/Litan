namespace test {
	function strout() {
		var fx = lambda(array) {
			var oss = std::strout();
			std::println(oss, "ABC");
			for i (0, std::size(array)) {
				std::print(oss, array[i]);
			};
			return std::string(oss);
		};

		var cases = [
			[[[1,2,3]], "ABC\n123"],
			[[['1','2','3']], "ABC\n123"],
			[[["1","2",3," ",true]], "ABC\n123 true"],
			[[[std::random::mersenne()]], "ABC\n<RandomEngine>"],
			[[[std::map()]], "ABC\n{}"],
		];

		return test_all_cases("OStream(std::strout()", fx, cases);
	}

	function strin() {
		var fx = lambda(str) {
			var iss = std::strin(str);
			return [
				std::read_char(iss),
				std::read_bool(iss),
				std::read_int(iss),
				std::read(iss),
				std::read_str(iss),
				std::read_float(iss),
			];
		};

		var cases = [
			[["a true 1 true a -1.5"],    ['a', true, 1, "true", "a", -1.5]],
			[["a false 42 hello a 1337"], ['a', false, 42, "hello", "a", 1337.0]],
			[["a 1 42 hello a 1337"],     ['a', true, 42, "hello", "a", 1337.0]],
			[["a 0 42 hello a 1337"],     ['a', false, 42, "hello", "a", 1337.0]],
		];

		return test_all_cases("IStream(std::strin())", fx, cases);
	}

	function is_eof() {
		var fx = lambda(str) {
			var iss = std::strin(str);
			var counter = 0;
			while(!std::is_eof(iss)) {
				std::read(iss);
				counter += 1;
			}
			return counter;
		};

		var cases = [
			[["111 111 111"], 3],
			[[""], 1],
			[["a"], 1],
			[["a a a a"], 4],
			[["1 2 3 4.0 5.5"], 5],
		];

		return test_all_cases("std::is_eof()", fx, cases);
	}

	function is_good() {
		var fx = lambda(str) {
			var iss = std::strin(str);
			std::read_int(iss);
			std::read_int(iss);
			std::read_int(iss);
			return std::is_good(iss);
		};

		var cases = [
			[["1 2"],         false],
			[["1 2 3 4"],     true],
			[["1 2 3"],       true],
			[["1 2 hello"],   false],
			[["foo bar baz"], false],
			[[""],            false],
		];

		return test_all_cases("std::good", fx, cases);
	}

	function read_all() {
		var cases = [
			[[std::fin("test/files/1.txt")], "hello world"],
			[[std::strin("hello world 123")], "hello world 123"],
		];

		return test_all_cases("std::read_all", &std::read_all(_), cases);
	}

	function readln () {
		var cases = [
			[[std::fin("test/files/1.txt")], "hello world"],
			[[std::strin("hello world 123")], "hello world 123"],
			[[std::strin("hello world\n 123")], "hello world"],
		];

		return test_all_cases("std::readln", &std::readln(_), cases);
	}

	function streams() {
		return strout() + strin() + is_eof() + is_good() + read_all() + readln();
	}
}