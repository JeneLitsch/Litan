namespace sphinx::test {
	function is_type() {
		assert_equal(std::is_type(null,        std::type::nul),     true);
		assert_equal(std::is_type(true,        std::type::bool),    true);
		assert_equal(std::is_type(null,        std::type::bool),    false);
		assert_equal(std::is_type(1,           std::type::int),     true);
		assert_equal(std::is_type(1,           std::type::float),   false);
		assert_equal(std::is_type("A",         std::type::string),  true);
		assert_equal(std::is_type("A",         std::type::array),   false);
		assert_equal(std::is_type([],          std::type::array),   true);
		assert_equal(std::is_type(std::map(),  std::type::map),     true);
		assert_equal(std::is_type(std::map(),  std::type::queue),   false);
		assert_equal(std::is_type(std::cout(), std::type::ostream), true);
	}



	function is_null() {
		assert_true(std::is_null(null));
		assert_false(std::is_null(1));
		assert_false(std::is_null(std::pair(1,2)));
	}



	function is_bool() {
		assert_true(std::is_bool(true));
		assert_false(std::is_bool(null));
	}



	function is_int() {
		assert_true(std::is_int(1));
		assert_false(std::is_int('A'));
	}



	function is_float() {
		assert_false(std::is_float(1));
		assert_true(std::is_float(1.0));
	}



	function is_string() {
		assert_true(std::is_string("A"));
	}



	function is_array() {
		assert_false(std::is_array("A"));
		assert_true(std::is_array([]));
	}



	function is_ostream() {
		assert_true(std::is_ostream(std::cout()));
		assert_true(std::is_ostream(std::strout()));
		assert_false(std::is_ostream(std::strin("")));
	}



	function is_istream() {
		assert_true(std::is_istream(std::cin()));
		assert_true(std::is_istream(std::strin("ABC")));
	}
}