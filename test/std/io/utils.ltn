namespace sphinx::utils {
	function test_reading(read_fx, input, expected, rest) {
		
		var in = std::strin(input);
		for(value : expected) {
			assert_false(std::is_eof(in));
			assert_equal_strict(read_fx(in), value);
		}
		if(?rest) {
			assert_equal_strict(rest, std::read_all(in));
		}
		else {
			assert_true(std::is_eof(in));
		}
	}



	function test_read(input, expected, rest)
		=> test_reading(&std::read(_), input, expected, rest)



	function test_read_bool(input, expected, rest)
		=> test_reading(&std::read_bool(_), input, expected, rest)



	function test_read_char(input, expected, rest)
		=> test_reading(&std::read_char(_), input, expected, rest)



	function test_read_int(input, expected, rest)
		=> test_reading(&std::read_int(_), input, expected, rest)



	function test_read_float(input, expected, rest)
		=> test_reading(&std::read_float(_), input, expected, rest)



	function test_read_str(input, expected, rest)
		=> test_reading(&std::read_str(_), input, expected, rest)
}