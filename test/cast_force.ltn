namespace sphinx::test {
	function force_cast_bool() {
		assert_equal_strict(4.2 ! bool, true);
		assert_equal_strict("a" ! bool, true);
	}



	function force_cast_value() {
		var str : any = "abc";
		assert_equal_strict(4.2 ! int, 4);
		assert_equal_strict(str ! string, "abc");
	}



	namespace force_cast_local {
		function test_type(type : <T>) {
			var x : any;
			assert_equal_strict(
				reflect(expr x ! T).type.name,
				reflect(type T).name
			);
		}
	}



	function force_cast_type() {
		force_cast_local::test_type(0);
		force_cast_local::test_type("");
		force_cast_local::test_type([0]);
	}



	function force_cast_throw() {
		assert_success(lambda => "" ! string);
		assert_except(lambda  => 4 ! string);
		assert_success(lambda => 4 ! float);
		assert_success(lambda => 4 : any ! float);
	}
}