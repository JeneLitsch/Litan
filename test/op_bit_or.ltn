namespace sphinx::test {
	function bitor() {
		assert_equal(0b011 | 0b110, 0b111);
		assert_equal(0b001 | 0b100, 0b101);
		assert_equal(1 | true, 1);
		assert_equal(1 | false, 1);
	}



	function bitor_type() {
		assert_equal(reflect(expr 1 | 1).type.name, "int");
		assert_equal(reflect(expr 0 | 1).type.name, "int");
	}



	function bitor_typename() {
		assert_equal(std::typename(1 | 1), "int");
		assert_equal(std::typename(0 | 1), "int");
	}
	


	function bitor_except() {
		assert_success(lambda => (1:any) | (1:any));
		assert_except(lambda => (1.0:any) | (1:any));
		assert_except(lambda => ("":any) | ("":any));
		assert_except(lambda => ([]:any) | ([]:any));
		assert_except(lambda => (std::struct():any) | (std::struct():any));
		assert_except(lambda => (std::map():any) | (std::map():any));
		assert_except(lambda => (std::stack():any) | (std::stack():any));
		assert_except(lambda => (std::queue():any) | (std::queue():any));
	}
}