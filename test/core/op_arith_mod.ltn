namespace sphinx::test {
	function mod_numeric() {
		test_name("operator: l % r");

		assert_equal(true % true, 0);
		assert_equal(false % true, 0);
		assert_equal(4 % 3, 1);
		assert_equal(4 % -3, 1);
		assert_equal(4 % 2, 0);
		assert_equal(-4 % 3, -1);
		assert_equal(4.5 % 1, 0.5);
		assert_equal(4.5 % 1.0, 0.5);
		assert_equal(4.25 % 0.5, 0.25);
		assert_equal(5 % 2, 1);
	}



	function mod_except() {
		test_name("operator: l % r except");

		assert_success(lambda => (true) % (true));
		assert_except(lambda => (true) % (false));
		assert_success(lambda => (3) % (4));
		assert_success(lambda => (3.0) % (4));
		assert_except(lambda => (3.0) % (0));
		assert_except(lambda => (0) % (0));
		assert_except(lambda => ("") % (""));
		assert_except(lambda => ([]) % ([]));
		assert_except(lambda => ([1]) % ([1]));
		assert_except(lambda => (std::make_map()) % (std::make_map()));
		assert_except(lambda => (std::make_struct()) % (std::make_struct()));
		assert_except(lambda => (std::make_stack()) % (std::make_stack()));
		assert_except(lambda => (std::make_queue()) % (std::make_queue()));
	}
}