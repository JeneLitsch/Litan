namespace sphinx::test {
	function bitand() {
		test_name("operator: l & r");

		assert_equal(0b011 & 0b110, 0b010);
		assert_equal(0b001 & 0b100, 0b000);
		assert_equal(1 & true, 1);
		assert_equal(1 & false, 0);
	}



	function bitand_typename() {
		test_name("operator: l & r type");

		assert_type(std::Int, 1 & 1);
		assert_type(std::Int, 0 & 1);
	}
	


	function bitand_except() {
		test_name("operator: l & r except");

		assert_success(lambda => (1) & (1));
		assert_except(lambda => (1.0) & (1));
		assert_except(lambda => ("") & (""));
		assert_except(lambda => ([]) & ([]));
		assert_except(lambda => (std::make_struct()) & (std::make_struct()));
		assert_except(lambda => (std::make_map()) & (std::make_map()));
		assert_except(lambda => (std::make_stack()) & (std::make_stack()));
		assert_except(lambda => (std::make_queue()) & (std::make_queue()));
	}
}