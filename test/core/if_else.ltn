namespace sphinx::test {
    function if_else() {
        var if_else = lambda (condition) {
			if(condition) return true;
			else return false;
		};

		assert_true(if_else(true));
		assert_false(if_else(false));
		assert_false(if_else(0));
		assert_true(if_else(1));
		assert_false(if_else(null));
		assert_true(if_else(""));
		assert_true(if_else([]));
		assert_true(if_else(std::make_struct()));
		assert_true(if_else(std::make_map()));
    }



	function if_else_scope() {
		var b = true;
		var x = 1337;
		if(b) {
			assert_equal_strict(x, 1337);
			var x = 0;
			assert_equal_strict(x, 0);
			x = 42;
			assert_equal_strict(x, 42);
		}
		else {}

		if(!b) {}
		else {
			assert_equal_strict(x, 1337);
			var x = 0;
			assert_equal_strict(x, 0);
			x = 42;
			assert_equal_strict(x, 42);
		}
		assert_equal_strict(x, 1337);
	}



	function if_else_special_bool() {
		if([ .__bool__ = lambda(self) => true ]) pass();
		else fail();

		if([ .__bool__ = lambda(self) => false ]) fail();
		else pass();
	}
}