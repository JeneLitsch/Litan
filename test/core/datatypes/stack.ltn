namespace sphinx::test {
	function stack_size() {
		var stack = std::make_stack();
		assert_equal_strict(stack->size(), 0);
		std::push(stack, 111);
		assert_equal_strict(stack->size(), 1);
		std::push(stack, 222);
		assert_equal_strict(stack->size(), 2);
	}



	function stack_is_empty() {
		var stack = std::make_stack();
		assert_true(stack->is_empty());
		std::push(stack, 111);
		assert_false(stack->is_empty());
		std::pop(stack);
		assert_true(stack->is_empty());
	}



	function stack_push_and_pop() {
		var stack = std::make_stack();
		assert_true(stack->is_empty());
		stack->push(111);
		assert_false(stack->is_empty());
		stack->push(222);
		assert_false(stack->is_empty());
		stack->push(333);
		assert_false(stack->is_empty());
		assert_equal_strict(stack->pop(), 333);
		assert_false(stack->is_empty());
		assert_equal_strict(stack->pop(), 222);
		assert_false(stack->is_empty());
		assert_equal_strict(stack->pop(), 111);
		assert_true(stack->is_empty());
	}



	function stack_pop_empty() {
		var stack = std::make_stack();
		assert_except(lambda[stack] => stack->pop());
	}



	function stack_values() {
		var stack = std::make_stack();
		stack->push(1);
		stack->push(2);
		stack->push(3);
		assert_equal_strict(stack->values(), [1,2,3]);
	}
}