namespace sphinx::test {
	function elvis() {
		assert_equal(true ?: 1, true);
		assert_equal(false ?: 1, 1);
		assert_equal(-1 ?: 1, -1);
		assert_equal(null ?: 1, 1);
		assert_equal("" ?: 1, "");
		assert_equal([] ?: 1, []);
		assert_equal(42 ?: 1337, 42);
		assert_equal(0 ?: 1337, 1337);
		assert_equal(std::cout() ?: 1337, std::cout());
		assert_equal(0.0 ?: 1337, 1337);
	}



	function elvis_short_circuit() {
		var test_short = lambda(a) {
			var second = std::mono(false);
			a ?: iife { second.value = true; };
			return second.value;
		};

		assert_true(test_short(false));
		assert_false(test_short(true));
    }



	function elvis_condition_once() {
		var evals = 0;
		iife { evals = evals + 1; } ?: null;
		assert_true(evals == 1);
    }
}