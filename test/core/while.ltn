namespace sphinx::test {
    function while_loop() {
		var fx = lambda(arr) {
            var i = 0;
			var value = 0;
            while(i < std::size(arr)) {
				value = value + arr[i];
                i=i+1;
			}
			return value;
		};

		assert_equal(fx([1,2,3]), 6);
		assert_equal(fx([10,20,30]), 60);
		assert_equal(fx([10,20,30, -20]), 40);
	}



	function while_scope() {
		var run = true;
		var x = 1337;
		while(run) {
			assert_equal_strict(x, 1337);
			var x = 0;
			assert_equal_strict(x, 0);
			x = 42;
			assert_equal_strict(x, 42);
			run = false;
		}
		assert_equal_strict(x, 1337);
	}



	function while_special_bool() {
		var obj = [
			.max = 3, .current = 0,
			.{bool} = lambda(self) {
				self.current = self.current + 1;
				return self.current < self.max;
			},
		];

		while(obj) {}
		assert_equal(obj.max, obj.current);
	}
}