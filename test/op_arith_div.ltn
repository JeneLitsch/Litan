namespace sphinx::test {
	function div_numeric() {
		assert_equal(true / 1, 1);
		assert_equal('A' / 2, 32);
		assert_equal('A' / 2.0, 32.5);
		assert_equal(4 / 2, 2);
		assert_equal(-4 / 2, -2);
		assert_equal(-4 / -2, 2);
		assert_equal(-4.0 / -2.0, 2.0);
	}



	function div_numeric_type() {
		assert_equal(decltype(true / 1).name, "int");
		assert_equal(decltype('A' / 2).name, "int");
		assert_equal(decltype('A' / 2.0).name, "float");
		assert_equal(decltype(4 / 2).name, "int");
		assert_equal(decltype(-4 / 2).name, "int");
		assert_equal(decltype(-4 / -2).name, "int");
		assert_equal(decltype(-4.0 / -2.0).name, "float");
	}



	function div_except() {
		assert_success(lambda => 1 / 2);
		assert_success(lambda => 1.0 / 2);
		assert_except(lambda => 1.0 / 0);
		assert_except(lambda => "" / "");
		assert_except(lambda => [] / []);
		assert_except(lambda => std::map() / std::map());
		assert_except(lambda => std::struct() / std::struct());
		assert_except(lambda => std::queue() / std::queue());
		assert_except(lambda => std::stack() / std::stack());
		assert_except(lambda => std::struct() / std::struct());
	}
}