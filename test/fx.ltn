function f1() { return 42; }
function f2() { return 1337; }

function f(a, b) {
	return a - b;
}

function makeAdd() {
	var arr1 = [1, 2, 3];
	var arr2 = [4, 5, 6];
	return function [arr1, arr2] (a, b) {
		std::println(arr1);
		std::println(arr2);
		return a + b;
	};
}

function main() {
	std::println("=== Lambdas ===");
	var add = makeAdd();
	std::println("add(1, 2) = " + std::invoke(add, [1, 2]));
	std::println("add(20, 22) = " + std::invoke(add, [20, 22]));

	std::println("=== Function pointers ===");
	var fxPtr = &f(_,_);
	std::println(std::invoke(fxPtr, [f1(), f2()]));

	std::println("=== Captures ===");
	var a = 1;
	var b = 2;
	var lambda = function [a, b] () {
		return a + b;
	};
	var result = std::invoke(lambda);
	std::println(result);
}