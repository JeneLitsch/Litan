
namespace a {
	function fx() -> Void {
		->print(1);
	}
}

namespace b {
	function fx() -> Void {
		->print(2);
	}
}

namespace test {
	struct Test {
		var Int a;
		var Int b;
		var Int c;
	}
	struct Bar {
		var Int x;
	}
	typedef A;
	namespace a1 {
		function fx(Int a, Int b) -> Void {
			->print(->min(a, b));
			->print(->max(a, b));
		}

		function fx(Float a, Float b) -> Void {
			->print(->min(a, b));
			->print(->max(a, b));
		}
	}
}



struct Foo {
	var test::Bar bar;
	var Int test;
}



function main() -> Void {
	var test::Test test = ->test::Test(1, 2, 3);
	->print(test.a);
	->print(test.b);
	->print(test.c);

	const ltn::Array arr = ->ltn::Array();
	->ltn::pushBack(arr, 1.1);
	->ltn::pushBack(arr, 2.1);
	->ltn::pushBack(arr, 3.1);

	->print(->Float(->ltn::at(arr, 0)));
	->print(->Float(->ltn::at(arr, 1)));
	->print(->Float(->ltn::at(arr, 2)));

	->test::a1::fx(-7, 42);
	->test::a1::fx(-7.3, 42.2);

	->a::fx();
	->b::fx();

	->destroy(arr);

	var Int a = 42;
	->print("Hello World");
	->print(a);
}