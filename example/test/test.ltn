
namespace a {
	function fx() -> Void {
		->print(1);
	}
}

namespace b {
	function fx() -> Void {
		->print(2);
	}
}

namespace test {
	struct Test {
		var Int a;
		var Int b;
		var Int c;
	}
	struct Bar {
		var Int x;
	}
	typedef A;
	namespace a1 {
		function fx(Int a, Int b) -> Void {
			->print(->ltn::min(a, b));
			->print(->ltn::max(a, b));
		}

		function fx(Float a, Float b) -> Void {
			->print(->ltn::min(a, b));
			->print(->ltn::max(a, b));
		}
	}
}

struct Foo {
	var test::Bar bar;
	var Int test;
}


function main() -> Void {
	var ltn::Deque deque = ->ltn::Deque();
	->ltn::pushBack(deque, 1);
	->ltn::pushFront(deque, 2);
	->ltn::pushFront(deque, 3);
	->print(->ltn::empty(deque));
	->print(->ltn::size(deque));
	->print(->ltn::popFront(deque));
	->print(->ltn::popFront(deque));
	->print(->ltn::empty(deque));
	->ltn::clear(deque);
	->print(->ltn::empty(deque));
	->ltn::clear(deque);
	->print(->ltn::empty(deque));
}