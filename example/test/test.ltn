
namespace a {
	function fx() -> Void {
		->print(1);
	}
}

namespace b {
	function fx() -> Void {
		->print(2);
	}
}

namespace test {
	struct Test {
		var Int a;
		var Int b;
		var Int c;
	}
	struct Bar {
		var Int x;
	}
	typedef A;
	namespace a1 {
		function fx(Int a, Int b) -> Void {
			->print(->ltn::min(a, b));
			->print(->ltn::max(a, b));
		}

		function fx(Float a, Float b) -> Void {
			->print(->ltn::min(a, b));
			->print(->ltn::max(a, b));
		}
	}
}

struct Foo {
	var test::Bar bar;
	var Int test;
}


function main() -> Void {
	var ltn::Stack stack = ->ltn::Stack();
	for(idx, 0, 25) {
		->ltn::push(stack, idx);
	}
	while(!->ltn::empty(stack)) {
		->print(->ltn::pop(stack)); 
	}
}