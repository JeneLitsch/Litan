-> MAIN
call FNX_main0
exit


// main ( -> voi ) [ ]
-> FNX_main0
stackalloc 2
array::new
store 0
load 0
newl 5
array::rsz
load 0
newl 5
array::fll
load 0
newl 0
newl 10
array::set
load 0
newl 1
newl 20
array::set
load 0
newl 2
newl 30
array::set
load 0
newl 3
newl 40
array::set
load 0
newl 4
newl 50
array::set
load 0
newl 0
array::get
print
load 0
newl 0
array::ers
load 0
array::len
print
load 0
newl 0
array::get
print
load 0
newl 0
array::ers
load 0
array::len
print
load 0
newl 0
array::get
print
load 0
newl 0
array::ers
load 0
array::len
print
load 0
newl 0
array::get
print
load 0
newl 0
array::ers
load 0
array::len
print
load 0
newl 0
array::get
print
load 0
newl 0
array::ers
load 0
array::len
print
// Foo
array::new
copy
newl 0
array::add
copy
newl 0
array::add
store 131
load 131
newl 0
// Bar
array::new
copy
newl 0
array::add
array::set
load 131
heap::del
newl 0
store 131
load 131
ifnx
goto IF17
goto ELSE18
-> IF17
newi 1234
call FNX_print11
goto END_IF19
-> ELSE18
newi 4321
call FNX_print11
goto END_IF19
-> END_IF19
size
print
return


// toInt ( flt -> int ) [ ]
-> FNX_toInt1
stackalloc 1
store 127
load 0
casti
return


// toFlt ( int -> flt ) [ ]
-> FNX_toFlt2
stackalloc 1
store 128
load 0
castf
return


// min ( int int -> int ) [ inline ]
-> FNX_min3
stackalloc 2
store 130
store 129
load 129
load 130
smli
ifnx
goto IF20
goto END_IF22
-> IF20
load 129
return
goto END_IF22
-> END_IF22
load 130
return


// min ( flt flt -> flt ) [ inline ]
-> FNX_min4
stackalloc 2
store 132
store 131
load 131
load 132
smlf
ifnx
goto IF23
goto END_IF25
-> IF23
load 131
return
goto END_IF25
-> END_IF25
load 132
return


// max ( int int -> int ) [ inline ]
-> FNX_max5
stackalloc 2
store 134
store 133
load 133
load 134
bgri
ifnx
goto IF26
goto END_IF28
-> IF26
load 133
return
goto END_IF28
-> END_IF28
load 134
return


// max ( flt flt -> flt ) [ inline ]
-> FNX_max6
stackalloc 2
store 136
store 135
load 135
load 136
bgrf
ifnx
goto IF29
goto END_IF31
-> IF29
load 135
return
goto END_IF31
-> END_IF31
load 136
return


// newArray ( -> arr ) [ ]
-> FNX_newArray7
stackalloc 1
array::new
store 1
load 142
return


// delete ( arr -> voi ) [ ]
-> FNX_delete8
stackalloc 1
store 137
load 0
heap::del
return


// addToArray ( arr int -> voi ) [ ]
-> FNX_addToArray9
stackalloc 2
store 139
store 138
load 0
load 1
array::add
return


// readArrayI ( arr int -> int ) [ ]
-> FNX_readArrayI10
stackalloc 2
store 141
store 140
load 0
load 1
array::get
return


// print ( int -> voi ) [ ]
-> FNX_print11
stackalloc 1
store 142
load 0
print
return


// print ( flt -> voi ) [ ]
-> FNX_print12
stackalloc 1
store 143
load 0
print 1
return


// print ( str -> voi ) [ ]
-> FNX_print13
stackalloc 1
store 144
load 0
string::print
return


// error ( -> voi ) [ ]
-> FNX_error14
stackalloc 0
error


// delete ( str -> voi ) [ ]
-> FNX_delete15
stackalloc 1
store 145
load 0
heap::del
return


// add ( str str -> str ) [ ]
-> FNX_add16
stackalloc 2
store 147
store 146
load 0
load 1
string::add
return


