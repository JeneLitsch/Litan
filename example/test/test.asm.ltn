-> MAIN
call FNX_main_0
exit


// main ( -> voi ) [ ]
-> FNX_main_0
stackalloc 1
// Foo
array::new
copy
newl 0
array::add
copy
newl 0
array::add
store 0
load 0
newl 0
// Bar
array::new
copy
newl 0
array::add
array::set
load 0
heap::del
newl 0
store 0
load 0
ifnx
goto IF_17
goto ELSE_18
-> IF_17
newi 1234
call FNX_print_11
goto END_IF_19
-> ELSE_18
newi 4321
call FNX_print_11
goto END_IF_19
-> END_IF_19
size
print
return


// toInt ( flt -> int ) [ ]
-> FNX_toInt_1
stackalloc 1
store 0
load 0
casti
return


// toFlt ( int -> flt ) [ ]
-> FNX_toFlt_2
stackalloc 1
store 0
load 0
castf
return


// min ( int int -> int ) [ inline ]
-> FNX_min_3
stackalloc 2
store 1
store 0
load 0
load 1
smli
ifnx
goto IF_20
goto END_IF_22
-> IF_20
load 0
return
goto END_IF_22
-> END_IF_22
load 1
return


// min ( flt flt -> flt ) [ inline ]
-> FNX_min_4
stackalloc 2
store 1
store 0
load 0
load 1
smlf
ifnx
goto IF_23
goto END_IF_25
-> IF_23
load 0
return
goto END_IF_25
-> END_IF_25
load 1
return


// max ( int int -> int ) [ inline ]
-> FNX_max_5
stackalloc 2
store 1
store 0
load 0
load 1
bgri
ifnx
goto IF_26
goto END_IF_28
-> IF_26
load 0
return
goto END_IF_28
-> END_IF_28
load 1
return


// max ( flt flt -> flt ) [ inline ]
-> FNX_max_6
stackalloc 2
store 1
store 0
load 0
load 1
bgrf
ifnx
goto IF_29
goto END_IF_31
-> IF_29
load 0
return
goto END_IF_31
-> END_IF_31
load 1
return


// newArray ( -> arr ) [ ]
-> FNX_newArray_7
stackalloc 1
array::new
store 1
load 0
return


// delete ( arr -> voi ) [ ]
-> FNX_delete_8
stackalloc 1
store 0
load 0
heap::del
return


// addToArray ( arr int -> voi ) [ ]
-> FNX_addToArray_9
stackalloc 2
store 1
store 0
load 0
load 1
array::add
return


// readArrayI ( arr int -> int ) [ ]
-> FNX_readArrayI_10
stackalloc 2
store 1
store 0
load 0
load 1
array::get
return


// print ( int -> voi ) [ ]
-> FNX_print_11
stackalloc 1
store 0
load 0
print
return


// print ( flt -> voi ) [ ]
-> FNX_print_12
stackalloc 1
store 0
load 0
print 1
return


// print ( str -> voi ) [ ]
-> FNX_print_13
stackalloc 1
store 0
load 0
string::print
return


// error ( -> voi ) [ ]
-> FNX_error_14
stackalloc 0
error


// delete ( str -> voi ) [ ]
-> FNX_delete_15
stackalloc 1
store 0
load 0
heap::del
return


// add ( str str -> str ) [ ]
-> FNX_add_16
stackalloc 2
store 1
store 0
load 0
load 1
string::add
return


