// Test
-> FNX_Test0
array::new
copy
newl 3
array::rsz
return


// Test
-> FNX_Test1
stackalloc 3
store 0
store 1
store 2
array::new
copy
load 2
array::pushb
copy
load 1
array::pushb
copy
load 0
array::pushb
return


// Bar
-> FNX_Bar2
array::new
copy
newl 1
array::rsz
return


// Bar
-> FNX_Bar3
stackalloc 1
store 0
array::new
copy
load 0
array::pushb
return


// Foo
-> FNX_Foo4
array::new
copy
newl 2
array::rsz
return


// Foo
-> FNX_Foo5
stackalloc 2
store 0
store 1
array::new
copy
load 1
array::pushb
copy
load 0
array::pushb
return


-> MAIN
call FNX_main10
exit


// fx ( -> Void ) 
-> FNX_fx6
stackalloc 0
newi 1
call FNX_print54
return


// fx ( -> Void ) 
-> FNX_fx7
stackalloc 0
newi 2
call FNX_print54
return


// fx ( Int Int -> Void ) 
-> FNX_fx8
stackalloc 2
store 1
store 0
load 0
load 1
call FNX_min17
call FNX_print54
load 0
load 1
call FNX_max19
call FNX_print54
return


// fx ( Float Float -> Void ) 
-> FNX_fx9
stackalloc 2
store 1
store 0
load 0
load 1
call FNX_min18
call FNX_print55
load 0
load 1
call FNX_max20
call FNX_print55
return


// main ( -> Void ) 
-> FNX_main10
stackalloc 2
call FNX_Deque45
store 0
newi 0
newi 5
dec
loop::range
newi 5
call FNX_print54
loop::cont
newi 0
newi 25
loop::range
loop::idx
store 1
load 0
load 1
call FNX_pushFront46
loop::cont
-> LOOP61
load 0
call FNX_empty52
lognot
ifnot
goto LOOP_END60
load 0
call FNX_popBack49
call FNX_print53
goto LOOP61
-> LOOP_END60
return


// Int ( Raw -> Int ) 
-> FNX_Int11
stackalloc 1
store 0
load 0
return
error


// Int ( Float -> Int ) 
-> FNX_Int12
stackalloc 1
store 0
load 0
casti
return
error


// Float ( Raw -> Float ) 
-> FNX_Float13
stackalloc 1
store 0
load 0
return
error


// Float ( Int -> Float ) 
-> FNX_Float14
stackalloc 1
store 0
load 0
castf
return
error


// destroy ( Pointer -> Void ) 
-> FNX_destroy15
stackalloc 1
store 0
load 0
heap::del
return


// exists ( Pointer -> Int ) 
-> FNX_exists16
stackalloc 1
store 0
load 0
heap::exist
return
error


// min ( Int Int -> Int ) 
-> FNX_min17
stackalloc 2
store 1
store 0
load 0
load 1
mini
return
error


// min ( Float Float -> Float ) 
-> FNX_min18
stackalloc 2
store 1
store 0
load 0
load 1
minf
return
error


// max ( Int Int -> Int ) 
-> FNX_max19
stackalloc 2
store 1
store 0
load 0
load 1
maxi
return
error


// max ( Float Float -> Float ) 
-> FNX_max20
stackalloc 2
store 1
store 0
load 0
load 1
maxf
return
error


// round ( Float -> Int ) 
-> FNX_round21
stackalloc 1
store 0
load 0
casti 1
return
error


// floor ( Float -> Int ) 
-> FNX_floor22
stackalloc 1
store 0
load 0
casti 2
return
error


// ceil ( Float -> Int ) 
-> FNX_ceil23
stackalloc 1
store 0
load 0
casti 3
return
error


// Array ( -> Array ) 
-> FNX_Array24
stackalloc 0
array::new
return
error


// Array ( Int -> Array ) 
-> FNX_Array25
stackalloc 2
store 0
load 0
newi 0
smli
ifnx
goto IF62
goto END_IF64
-> IF62
call FNX_error57
goto END_IF64
-> END_IF64
call FNX_Array24
store 1
load 1
load 0
array::rsz
load 1
return
error


// clear ( Array -> Void ) 
-> FNX_clear26
stackalloc 1
store 0
load 0
array::clr
return


// insert ( Array Int Raw -> Void ) 
-> FNX_insert27
stackalloc 3
store 2
store 1
store 0
load 0
load 1
load 2
array::ins
return


// erase ( Array Int -> Void ) 
-> FNX_erase28
stackalloc 2
store 1
store 0
load 0
load 1
array::ers
return


// empty ( Array -> Int ) 
-> FNX_empty29
stackalloc 1
store 0
load 0
array::len
newl 0
eqli
return
error


// size ( Array -> Int ) 
-> FNX_size30
stackalloc 1
store 0
load 0
array::len
return
error


// pushBack ( Array Raw -> Void ) 
-> FNX_pushBack31
stackalloc 2
store 1
store 0
load 0
load 1
array::pushb
return


// popBack ( Array -> Raw ) 
-> FNX_popBack32
stackalloc 1
store 0
load 0
array::popb
return
error


// at ( Array Int -> Raw ) 
-> FNX_at33
stackalloc 2
store 1
store 0
load 0
load 1
array::get
return
error


// at ( Array Int Raw -> Void ) 
-> FNX_at34
stackalloc 3
store 2
store 1
store 0
load 0
load 1
load 2
array::set
return


// Stack ( -> Stack ) 
-> FNX_Stack35
stackalloc 0
array::new
return
error


// push ( Stack Raw -> Void ) 
-> FNX_push36
stackalloc 2
store 1
store 0
load 0
load 1
array::pushb
return


// pop ( Stack -> Raw ) 
-> FNX_pop37
stackalloc 1
store 0
load 0
array::popb
return
error


// top ( Stack -> Raw ) 
-> FNX_top38
stackalloc 1
store 0
load 0
array::getb
return
error


// empty ( Stack -> Int ) 
-> FNX_empty39
stackalloc 1
store 0
load 0
array::len
newl 0
eqli
return
error


// Queue ( -> Queue ) 
-> FNX_Queue40
stackalloc 0
array::new
return
error


// push ( Queue Raw -> Void ) 
-> FNX_push41
stackalloc 2
store 1
store 0
load 0
load 1
array::pushb
return


// pop ( Queue -> Raw ) 
-> FNX_pop42
stackalloc 1
store 0
load 0
array::popf
return
error


// front ( Queue -> Raw ) 
-> FNX_front43
stackalloc 1
store 0
load 0
array::getf
return
error


// empty ( Queue -> Int ) 
-> FNX_empty44
stackalloc 1
store 0
load 0
array::len
newl 0
eqli
return
error


// Deque ( -> Deque ) 
-> FNX_Deque45
stackalloc 0
array::new
return
error


// pushFront ( Deque Raw -> Void ) 
-> FNX_pushFront46
stackalloc 2
store 1
store 0
load 0
load 1
array::pushf
return


// popFront ( Deque -> Raw ) 
-> FNX_popFront47
stackalloc 1
store 0
load 0
array::popf
return
error


// pushBack ( Deque Raw -> Void ) 
-> FNX_pushBack48
stackalloc 2
store 1
store 0
load 0
load 1
array::pushb
return


// popBack ( Deque -> Raw ) 
-> FNX_popBack49
stackalloc 1
store 0
load 0
array::popb
return
error


// front ( Deque -> Raw ) 
-> FNX_front50
stackalloc 1
store 0
load 0
array::getf
return
error


// back ( Deque -> Raw ) 
-> FNX_back51
stackalloc 1
store 0
load 0
array::getb
return
error


// empty ( Deque -> Int ) 
-> FNX_empty52
stackalloc 1
store 0
load 0
array::len
newl 0
eqli
return
error


// print ( Raw -> Void ) 
-> FNX_print53
stackalloc 1
store 0
load 0
print 0
return


// print ( Int -> Void ) 
-> FNX_print54
stackalloc 1
store 0
load 0
print 0
return


// print ( Float -> Void ) 
-> FNX_print55
stackalloc 1
store 0
load 0
print 1
return


// print ( String -> Void ) 
-> FNX_print56
stackalloc 1
store 0
load 0
string::print
return


// error ( -> Void ) 
-> FNX_error57
stackalloc 0
error
return


// destroy ( String -> Void ) 
-> FNX_destroy58
stackalloc 1
store 0
load 0
heap::del
return


// add ( String String -> String ) 
-> FNX_add59
stackalloc 2
store 1
store 0
load 0
load 1
string::add
return
error


