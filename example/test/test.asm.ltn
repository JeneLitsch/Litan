-> MAIN 
call FNX_main_0
exit 


// main ( -> voi ) [ ]
-> FNX_main_0
stackalloc 3
newf 42.600000
call FNX_toInt_5
call FNX_print_15
newi 42
call FNX_toFlt_6
newf 0.500000
addf
call FNX_print_16
// assign to int var a
newi 42
store 0
load 0
call FNX_print_15
// assign to int var foo
call FNX_makeFoo_1
store 1
load 1
newl 0
array::get 
newl 0
newi 41
array::set 
load 1
newl 0
array::get 
newl 0
array::get 
call FNX_print_15
return 


// makeFoo ( -> Foo ) [ ]
-> FNX_makeFoo_1
stackalloc 2
// assign to int var bar
call FNX_makeBar_2
store 1
array::new
store 0
load 0
load 1
array::add
load 0
return 


// makeBar ( -> Bar ) [ ]
-> FNX_makeBar_2
stackalloc 1
array::new
store 0
load 0
newl 42
array::add
load 0
return 


// getX ( Foo -> int ) [ ]
-> FNX_getX_3
stackalloc 1
store 0
load 0
newl 0
array::get
newl 0
array::get
return


// setX ( Foo int -> voi ) [ ]
-> FNX_setX_4
stackalloc 2
store 1
store 0
load 0
newl 0
array::get
newl 0
load 1
array::set
return


// toInt ( flt -> int ) [ ]
-> FNX_toInt_5
stackalloc 1
store 0
load 0
casti
return


// toFlt ( int -> flt ) [ ]
-> FNX_toFlt_6
stackalloc 1
store 0
load 0
castf
return


// min ( int int -> int ) [ inline ]
-> FNX_min_7
stackalloc 2
store 1
store 0
load 0
load 1
smli
ifnx
goto IF_33
goto END_IF_35
-> IF_33
load 0
return 
-> END_IF_35
load 1
return 


// min ( flt flt -> flt ) [ inline ]
-> FNX_min_8
stackalloc 2
store 1
store 0
load 0
load 1
smlf
ifnx
goto IF_36
goto END_IF_38
-> IF_36
load 0
return 
-> END_IF_38
load 1
return 


// max ( int int -> int ) [ inline ]
-> FNX_max_9
stackalloc 2
store 1
store 0
load 0
load 1
bgri
ifnx
goto IF_39
goto END_IF_41
-> IF_39
load 0
return 
-> END_IF_41
load 1
return 


// max ( flt flt -> flt ) [ inline ]
-> FNX_max_10
stackalloc 2
store 1
store 0
load 0
load 1
bgrf
ifnx
goto IF_42
goto END_IF_44
-> IF_42
load 0
return 
-> END_IF_44
load 1
return 


// newArray ( -> arr ) [ ]
-> FNX_newArray_11
stackalloc 1
array::new
store 1
load 0
return 


// delete ( arr -> voi ) [ ]
-> FNX_delete_12
stackalloc 1
store 0
load 0
heap::del
return 


// addToArray ( arr int -> voi ) [ ]
-> FNX_addToArray_13
stackalloc 2
store 1
store 0
load 0
load 1
array::add
return 


// readArrayI ( arr int -> int ) [ ]
-> FNX_readArrayI_14
stackalloc 2
store 1
store 0
load 0
load 1
array::get
return


// print ( int -> voi ) [ ]
-> FNX_print_15
stackalloc 1
store 0
load 0
print
return 


// print ( flt -> voi ) [ ]
-> FNX_print_16
stackalloc 1
store 0
load 0
print 1
return 


// print ( str -> voi ) [ ]
-> FNX_print_17
stackalloc 1
store 0
load 0
string::print
return 


// error ( -> voi ) [ ]
-> FNX_error_18
stackalloc 0
error


// delete ( str -> voi ) [ ]
-> FNX_delete_19
stackalloc 1
store 0
load 0
heap::del
return 


// add ( str str -> str ) [ ]
-> FNX_add_20
stackalloc 2
store 1
store 0
load 0
load 1
string::add
return


