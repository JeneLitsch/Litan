// Test
-> FNX_Test0
heap::allocate::array
copy
newl 3
array::resize
return


// Test
-> FNX_Test1
stackalloc 3
store 0
store 1
store 2
heap::allocate::array
copy
load 2
array::pushback
copy
load 1
array::pushback
copy
load 0
array::pushback
return


// Bar
-> FNX_Bar2
heap::allocate::array
copy
newl 1
array::resize
return


// Bar
-> FNX_Bar3
stackalloc 1
store 0
heap::allocate::array
copy
load 0
array::pushback
return


// Foo
-> FNX_Foo4
heap::allocate::array
copy
newl 2
array::resize
return


// Foo
-> FNX_Foo5
stackalloc 2
store 0
store 1
heap::allocate::array
copy
load 1
array::pushback
copy
load 0
array::pushback
return


-> MAIN
call FNX_main11
exit


// fx ( -> Void ) 
-> FNX_fx6
stackalloc 0
newi 1
call FNX_print60
return


// fx ( -> Void ) 
-> FNX_fx7
stackalloc 0
newi 2
call FNX_print60
return


// fx ( Int Int -> Void ) 
-> FNX_fx8
stackalloc 2
store 1
store 0
load 0
load 1
call FNX_min18
call FNX_print60
load 0
load 1
call FNX_max20
call FNX_print60
return


// fx ( Float Float -> Void ) 
-> FNX_fx9
stackalloc 2
store 1
store 0
load 0
load 1
call FNX_min19
call FNX_print61
load 0
load 1
call FNX_max21
call FNX_print61
return


// is ( Pointer -> Int ) 
-> FNX_is10
stackalloc 1
store 0
load 0
heap::istype::deque
return
error


// main ( -> Void ) 
-> FNX_main11
stackalloc 0
newi 1
call FNX_println64
newf 2.500000
call FNX_println65
call FNX_Deque49
call FNX_println63
return


// Int ( Raw -> Int ) 
-> FNX_Int12
stackalloc 1
store 0
load 0
return
error


// Int ( Float -> Int ) 
-> FNX_Int13
stackalloc 1
store 0
load 0
casti
return
error


// Float ( Raw -> Float ) 
-> FNX_Float14
stackalloc 1
store 0
load 0
return
error


// Float ( Int -> Float ) 
-> FNX_Float15
stackalloc 1
store 0
load 0
castf
return
error


// destroy ( Pointer -> Void ) 
-> FNX_destroy16
stackalloc 1
store 0
load 0
heap::delete
return


// exists ( Pointer -> Int ) 
-> FNX_exists17
stackalloc 1
store 0
load 0
heap::exist
return
error


// min ( Int Int -> Int ) 
-> FNX_min18
stackalloc 2
store 1
store 0
load 0
load 1
mini
return
error


// min ( Float Float -> Float ) 
-> FNX_min19
stackalloc 2
store 1
store 0
load 0
load 1
minf
return
error


// max ( Int Int -> Int ) 
-> FNX_max20
stackalloc 2
store 1
store 0
load 0
load 1
maxi
return
error


// max ( Float Float -> Float ) 
-> FNX_max21
stackalloc 2
store 1
store 0
load 0
load 1
maxf
return
error


// round ( Float -> Int ) 
-> FNX_round22
stackalloc 1
store 0
load 0
casti 1
return
error


// floor ( Float -> Int ) 
-> FNX_floor23
stackalloc 1
store 0
load 0
casti 2
return
error


// ceil ( Float -> Int ) 
-> FNX_ceil24
stackalloc 1
store 0
load 0
casti 3
return
error


// Array ( -> Array ) 
-> FNX_Array25
stackalloc 0
heap::allocate::array
return
error


// Array ( Int -> Array ) 
-> FNX_Array26
stackalloc 2
store 0
load 0
newi 0
smli
ifnx
goto IF70
goto END_IF72
-> IF70
call FNX_error68
goto END_IF72
-> END_IF72
call FNX_Array25
store 1
load 1
load 0
array::resize
load 1
return
error


// clear ( Array -> Void ) 
-> FNX_clear27
stackalloc 1
store 0
load 0
array::clear
return


// insert ( Array Int Raw -> Void ) 
-> FNX_insert28
stackalloc 3
store 2
store 1
store 0
load 0
load 1
load 2
array::insert
return


// erase ( Array Int -> Void ) 
-> FNX_erase29
stackalloc 2
store 1
store 0
load 0
load 1
array::erase
return


// empty ( Array -> Int ) 
-> FNX_empty30
stackalloc 1
store 0
load 0
array::empty
return
error


// size ( Array -> Int ) 
-> FNX_size31
stackalloc 1
store 0
load 0
array::size
return
error


// pushback ( Array Raw -> Void ) 
-> FNX_pushback32
stackalloc 2
store 1
store 0
load 0
load 1
array::pushback
return


// popback ( Array -> Raw ) 
-> FNX_popback33
stackalloc 1
store 0
load 0
array::popback
return
error


// at ( Array Int -> Raw ) 
-> FNX_at34
stackalloc 2
store 1
store 0
load 0
load 1
array::get
return
error


// at ( Array Int Raw -> Void ) 
-> FNX_at35
stackalloc 3
store 2
store 1
store 0
load 0
load 1
load 2
array::set
return


// front ( Array -> Raw ) 
-> FNX_front36
stackalloc 1
store 0
load 0
array::front
error


// back ( Array -> Raw ) 
-> FNX_back37
stackalloc 1
store 0
load 0
array::back
error


// Stack ( -> Stack ) 
-> FNX_Stack38
stackalloc 0
heap::allocate::stack
return
error


// push ( Stack Raw -> Void ) 
-> FNX_push39
stackalloc 2
store 1
store 0
load 0
load 1
stack::push
return


// pop ( Stack -> Raw ) 
-> FNX_pop40
stackalloc 1
store 0
load 0
stack::pop
return
error


// top ( Stack -> Raw ) 
-> FNX_top41
stackalloc 1
store 0
load 0
stack::top
return
error


// empty ( Stack -> Int ) 
-> FNX_empty42
stackalloc 1
store 0
load 0
stack::empty
return
error


// size ( Stack -> Int ) 
-> FNX_size43
stackalloc 1
store 0
load 0
stack::size
return
error


// Queue ( -> Queue ) 
-> FNX_Queue44
stackalloc 0
heap::allocate::queue
return
error


// push ( Queue Raw -> Void ) 
-> FNX_push45
stackalloc 2
store 1
store 0
load 0
load 1
queue::push
return


// pop ( Queue -> Raw ) 
-> FNX_pop46
stackalloc 1
store 0
load 0
queue::pop
return
error


// front ( Queue -> Raw ) 
-> FNX_front47
stackalloc 1
store 0
load 0
queue::front
return
error


// empty ( Queue -> Int ) 
-> FNX_empty48
stackalloc 1
store 0
load 0
queue::empty
return
error


// Deque ( -> Deque ) 
-> FNX_Deque49
stackalloc 0
heap::allocate::deque
return
error


// clear ( Deque -> Void ) 
-> FNX_clear50
stackalloc 1
store 0
load 0
deque::clear
return


// pushFront ( Deque Raw -> Void ) 
-> FNX_pushFront51
stackalloc 2
store 1
store 0
load 0
load 1
deque::pushf
return


// popFront ( Deque -> Raw ) 
-> FNX_popFront52
stackalloc 1
store 0
load 0
deque::popf
return
error


// pushBack ( Deque Raw -> Void ) 
-> FNX_pushBack53
stackalloc 2
store 1
store 0
load 0
load 1
deque::pushb
return


// popBack ( Deque -> Raw ) 
-> FNX_popBack54
stackalloc 1
store 0
load 0
deque::popb
return
error


// front ( Deque -> Raw ) 
-> FNX_front55
stackalloc 1
store 0
load 0
deque::front
return
error


// back ( Deque -> Raw ) 
-> FNX_back56
stackalloc 1
store 0
load 0
deque::back
return
error


// size ( Deque -> Int ) 
-> FNX_size57
stackalloc 1
store 0
load 0
deque::size
return
error


// empty ( Deque -> Int ) 
-> FNX_empty58
stackalloc 1
store 0
load 0
deque::empty
return
error


// print ( Raw -> Void ) 
-> FNX_print59
stackalloc 1
store 0
load 0
print::uint
return


// print ( Int -> Void ) 
-> FNX_print60
stackalloc 1
store 0
load 0
print::int
return


// print ( Float -> Void ) 
-> FNX_print61
stackalloc 1
store 0
load 0
print::float
return


// print ( String -> Void ) 
-> FNX_print62
stackalloc 1
store 0
load 0
print::string
return


// println ( Raw -> Void ) 
-> FNX_println63
stackalloc 1
store 0
load 0
print::uint
print::newline
return


// println ( Int -> Void ) 
-> FNX_println64
stackalloc 1
store 0
load 0
print::int
print::newline
return


// println ( Float -> Void ) 
-> FNX_println65
stackalloc 1
store 0
load 0
print::float
print::newline
return


// println ( String -> Void ) 
-> FNX_println66
stackalloc 1
store 0
load 0
print::string
print::newline
return


// println ( -> Void ) 
-> FNX_println67
stackalloc 0
print::newline
return


// error ( -> Void ) 
-> FNX_error68
stackalloc 0
error
return


// add ( String String -> String ) 
-> FNX_add69
stackalloc 2
store 1
store 0
load 0
load 1
string::add
return
error


