#pragma once
#include <unordered_map>
#include <string_view>
#include <tuple>
#include "ltn/InstructionSet.hxx"
namespace ltn::a {
	using namespace std::string_view_literals;
	using InstructionData = std::tuple<Inst, std::size_t>;
	using InstructionTable = std::unordered_map<std::string_view, InstructionData>;
	const InstructionTable instructionTable{
		{"add", {Inst::ADD, 1}},
		{"sub", {Inst::SUB, 1}},
		{"mlt", {Inst::MLT, 1}},
		{"div", {Inst::DIV, 1}},
		{"mod", {Inst::MOD, 1}},
		{"eql", {Inst::EQL, 1}},
		{"ueql", {Inst::UEQL, 1}},
		{"sml", {Inst::SML, 1}},
		{"bgr", {Inst::BGR, 1}},
		{"smleql", {Inst::SMLEQL, 1}},
		{"bgreql", {Inst::BGREQL, 1}},
		{"shift_l", {Inst::SHIFT_L, 1}},
		{"shift_r", {Inst::SHIFT_R, 1}},
		{"neg", {Inst::NEG, 1}},
		{"not", {Inst::NOT, 1}},
		{"inc", {Inst::INC, 1}},
		{"dec", {Inst::DEC, 1}},
		{"newu", {Inst::NEWU, 9}},
		{"newi", {Inst::NEWI, 9}},
		{"newf", {Inst::NEWF, 9}},
		{"newfx", {Inst::NEWFX, 17}},
		{"newclock", {Inst::NEWCLOCK, 1}},
		{"true", {Inst::TRUE, 1}},
		{"false", {Inst::FALSE, 1}},
		{"newarr", {Inst::NEWARR, 1}},
		{"newstr", {Inst::NEWSTR, 1}},
		{"newout", {Inst::NEWOUT, 2}},
		{"newin", {Inst::NEWIN, 2}},
		{"null", {Inst::NVLL, 1}},
		{"char", {Inst::CHAR, 2}},
		{"elem", {Inst::ELEM, 1}},
		{"char_4", {Inst::CHAR_4, 5}},
		{"char_8", {Inst::CHAR_8, 9}},
		{"jump", {Inst::JUMP, 9}},
		{"call", {Inst::CALL, 9}},
		{"return", {Inst::RETURN, 1}},
		{"ifelse", {Inst::IF, 9}},
		{"error", {Inst::ERROR, 1}},
		{"exit", {Inst::EXIT, 1}},
		{"invoke", {Inst::INVOKE, 1}},
		{"external", {Inst::EXTERNAL, 1}},
		{"read", {Inst::READ, 1}},
		{"write", {Inst::WRITE, 1}},
		{"scrap", {Inst::SCRAP, 1}},
		{"makevar", {Inst::MAKEVAR, 1}},
		{"at", {Inst::AT, 1}},
		{"at_write", {Inst::AT_WRITE, 1}},
		{"read_x", {Inst::READ_X, 9}},
		{"write_x", {Inst::WRITE_X, 9}},
		{"read_0", {Inst::READ_0, 1}},
		{"read_1", {Inst::READ_1, 1}},
		{"read_2", {Inst::READ_2, 1}},
		{"read_3", {Inst::READ_3, 1}},
		{"write_0", {Inst::WRITE_0, 1}},
		{"write_1", {Inst::WRITE_1, 1}},
		{"write_2", {Inst::WRITE_2, 1}},
		{"write_3", {Inst::WRITE_3, 1}},
		{"out", {Inst::OUT, 1}},
		{"in_str", {Inst::IN_STR, 1}},
		{"in_line", {Inst::IN_LINE, 1}},
		{"in_int", {Inst::IN_INT, 1}},
		{"in_float", {Inst::IN_FLOAT, 1}},
		{"is_eof", {Inst::IS_EOF, 1}},
		{"min", {Inst::MIN, 1}},
		{"max", {Inst::MAX, 1}},
		{"round", {Inst::ROUND, 1}},
		{"floor", {Inst::FLOOR, 1}},
		{"ceil", {Inst::CEIL, 1}},
		{"abs", {Inst::ABS, 1}},
		{"hypot", {Inst::HYPOT, 1}},
		{"sqrt", {Inst::SQRT, 1}},
		{"sin", {Inst::SIN, 1}},
		{"cos", {Inst::COS, 1}},
		{"tan", {Inst::TAN, 1}},
		{"size", {Inst::SIZE, 1}},
		{"front", {Inst::FRONT, 1}},
		{"back", {Inst::BACK, 1}},
		{"to_seconds", {Inst::TO_SECONDS, 1}},
		{"typeid", {Inst::TYPEID, 1}},

	};
}